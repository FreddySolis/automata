/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pbe;

/**
 *
 * @author Freddy
 */
public class Automata extends javax.swing.JFrame {
    private String originalString;
    private boolean notError=false;
    private boolean returns = false;
    /**
     * Creates new form Automata
     */
    public Automata() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jLabel1.setText("Entrada");

        jTextArea2.setEditable(false);
        jTextArea2.setColumns(20);
        jTextArea2.setRows(5);
        jScrollPane2.setViewportView(jTextArea2);

        jLabel2.setText("Salida");

        jButton1.setText("Analizar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 293, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 304, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 201, Short.MAX_VALUE)
                    .addComponent(jScrollPane1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1)
                .addContainerGap(111, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

   
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        startChecking();
        /*String xd =  this.jTextArea1.getText();
        System.out.println(xd.split("\n").length);
        for (String string : xd.split("\n")) {
            System.out.println(string);
        }*/
    }//GEN-LAST:event_jButton1ActionPerformed
    
    public void startChecking(){
        this.jTextArea2.setText("");
        this.originalString = this.jTextArea1.getText();
        this.notError = false;
        String firstPart[];
        String second[];
        firstPart = this.originalString.split("\\{");
        second = firstPart[0].split("\\(");
        boolean symbols[] = checkSymbols(originalString);
        
            if(second.length == 2){
                notError = q0(second[0]);
                if(notError == true){
                    notError = q4(second[1]);
                    if(!symbols[0]){
                        notError = false;
                        this.jTextArea2.append("Error al leer q8");
                    }
                    String thrid[] = this.originalString.split("\n");
                    if(thrid.length > 1 && notError){
                        notError = q9(thrid[1]);
                        if(notError && !returns ){
                            this.jTextArea2.append("Metodo declarado correctamente");
                        }else if(notError && returns){
                            //Estado bien op aquÃ­
                        }
                    }
                }
            }else{ 
                this.jTextArea2.append("Error al leer q1");
            }
        
    
    }
    public boolean q0(String x){
        String method[] = x.split(" ");
        if(method[0].equals("void")){
            returns = false;
            return q1(x);
        }else if(isDataType(method[0])){
            returns = true;
            return q1(x);
        }else{
        jTextArea2.append("Error al leer q0");
        return false;
        }
        
        
        
    }
    
    public boolean q1(String x){
        String third[] = x.split(" ");
        if(third.length == 2){
            if(!isDataType(third[1])){
                 
                   return true;
            }else{
                if(!returns){
                    jTextArea2.append("Error al leer q15");
                }else{
                    jTextArea2.append("Error al leer q2");
                }
                return false;
            }
        }else{
            if(returns){
                jTextArea2.append("Error al leer q16");
            }else{
                jTextArea2.append("Error al leer q3");
            }
            
            return false;
        }
    
        
    }
    
    public boolean q4(String x){
        String parameters[] = x.split("\\)");
   
        if(parameters.length > 0){
            return checkParameter(parameters[0]);
        }else{
            
            return true;
        }
        
    }
    
    public boolean q9(String x){
        char dotValidaton[] = x.toCharArray();
        String xd = x.replace(';', ' ');
        xd = xd.trim();
        
        if(xd.equals("instrucciones")){
            if(dotValidaton[dotValidaton.length-1] == ';'){
                return true;
            }else{
                if(returns){
                    jTextArea2.append("Error al leer q25");
                
                }else{
                    jTextArea2.append("Error al leer q11");
                
                }
                return false;
            }
        }else{
            if(returns){
                jTextArea2.append("Error al leer q24");
                return false;
            }else{
                jTextArea2.append("Error al leer q10");
                return false;
            }
            
        }
    }
    
    public boolean checkParameter(String x){
        String parameters[] = x.split(",");
    
        for (String parameter : parameters) {
            String temp[] = parameter.split(" ");
            
            if(isDataType(temp[0].trim())){
                if(!isDataType(temp[1].trim())){
                    System.out.println("Jala");
                }else{
                    jTextArea2.append("Error al leer q7");
                    return false;
                }
            }else{
                //jTextArea2.append("Error al leer q4");
                return false;
            }
        }
        return true;
    }
    public boolean isDataType(String x){
        if(x.equals("int") || x.equals("String") || x.equals("boolean") || x.equals("char") || x.equals("float") || x.equals("double") ){
            return true;
        }else{
            return false;
        }
    }
    
    public boolean itReturns(String x[]){
        if(x.length == 4){
            String verifyReturn[] = x[2].split(" ");
            char dotVerify[] = x[2].toCharArray();
            
            if(verifyReturn[0].equals("return")){
                String xd = verifyReturn[2].replace(';', ' ');
                xd = xd.trim();
                if(isDataType(xd)){
                    jTextArea2.append("Error al leer q29");
                    notError = false;
                    return true;
                }else{
                    if(dotVerify[dotVerify.length-1] == ';'){
                        return true;
                    }else{
                    jTextArea2.append("Error al leer q30");
                    notError = false;
                    return false;
                    }
                }
            }else{
                notError = false;
                jTextArea2.append("Error al leer q27");
                return false;
            }
        
        }else if(x.length==3){
            return false;
        }else{
            if(!returns){
                jTextArea2.append("Error al leer 13");
            }else{
                jTextArea2.append("Error al leer q30");
            }
            notError = false;
            return false;
        }
        
    }
    
    public boolean[] checkSymbols(String x){
        char everything[] = x.toCharArray();
        boolean[] bo = new boolean[4];
        int cont = 0;
        int cont2 = 0;
        int cont3 = 0;
        int cont4 = 0;
        for (char c : everything) {
            if(c == '{' && cont == 0){
                bo[0] = true;
                cont++;
            }else if(c == '{' && cont != 0){
                bo[0] = false;
                cont++;
            }
            if(c == '}' && cont2 == 0){
                bo[1] = true;
                cont2++;
            }else if(c == '}' && cont2 != 0){
                bo[0] = false;
                cont++;
            
            }
            if(c == '(' && cont3 == 0){
                bo[2] = true;
                cont3++;
            }else if(c == '(' && cont3 != 0){
                bo[0] = false;
                cont++;
            
            }
            if(c == ')' && cont4 == 0){
                bo[3] = true;
                cont4++;
            }else if(c == ')' && cont4 != 0){
                bo[0] = false;
                cont++;
            }
        }
        
        return bo;
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Automata.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Automata.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Automata.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Automata.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Automata().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    // End of variables declaration//GEN-END:variables
}
